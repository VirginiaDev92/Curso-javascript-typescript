-- Aula 17 rota de criação de local

-- Aula 19  Transações de Database --
 * Transações podem ter quantas operações for necessarias e 1 falha ocorrer desfaz rollback
import { Router } from 'express';
import connectionKnex from '../database/connection';

const locationsRoutes = Router();

locationsRoutes.post('/',async (request,response)=>{
    const { name,image,email,watsapp,latitude,longititude,city,uf,items} = request.body;
    const location ={
        name,                                                              /** name ta recebendo o valor de name mesmo que foi recebido e destruturado:short sintax */
        image:"fake.jpg",
        email,
        watsapp,
        latitude,
        longititude,
        city,
        uf,
        items
    }
    const transaction = await connectionKnex.transaction();                 /**Inicializando a transação */
    const newIds = await transaction('locations').insert(location);
    const locationId= newIds[0];
    const locationItems = items.map(async(item_id:number)=>{
        const selectedItems = await transaction('items').where('id',item_id).first();
        if(!selectedItems){
            return response.status(400).json({message:'item not faud'});
        }
        return{
            item_id,
            location_id:locationId
        }
    });
    await transaction('locations_items').insert(locationItems);
    await transaction.commit();                                                                       /**Termina a transação precisa dar o commit,confirmar que tudo ocrreu bem*/
    return response.json({id:locationId,...location});                    /**spred operation */
});

export default locationsRoutes;

--Aula 20 Junçoes de tabelas em pesquisa